name: CI

on:
  pull_request:
    types:
      - closed
    branches: 
      - authTest
  workflow_dispatch:

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Build and push'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}  

      - env:
          SESSION_TOKEN: ${{ secrets.SESSION_TOKEN }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          USER_CONTROL: ${{ secrets.USER_CONTROL }}
          FACEBOOK_METADATA: ${{ secrets.FACEBOOK_METADATA }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          SERVER_URL: ${{ secrets.SERVER_URL }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          KAFKA_BROKERS: ${{ secrets.KAFKA_BROKERS }}
          KAFKA_USERNAME: ${{ secrets.KAFKA_USERNAME }}
          KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}
          MONGO_URL: ${{ secrets.MONGO_URL }}
          VERSION: ${{ secrets.VERSION }}
          WEBHOOK_VERIFICATION_TOKEN: ${{ secrets.WEBHOOK_VERIFICATION_TOKEN }}
          SFDC_CONSUMER_KEY: ${{ secrets.SFDC_CONSUMER_KEY }}
          SFDC_CONSUMER_SECRET: ${{ secrets.SFDC_CONSUMER_SECRET }}
          SFDC_USERNAME: ${{ secrets.SFDC_USERNAME }}
          SFDC_PASSWORD: ${{ secrets.SFDC_PASSWORD }}
          API_TOKEN_SECRET: ${{ secrets.API_TOKEN_SECRET }}
          AUTH0_ISSUER: ${{ secrets.AUTH0_ISSUER }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
        run: | 
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/supplyfy-chatbot:latest --build-arg ARG_SESSION_TOKEN="$SESSION_TOKEN" --build-arg ARG_NODE_ENV="$NODE_ENV" --build-arg ARG_USER_CONTROLL="$USER_CONTROLL" --build-arg ARG_FACEBOOK_METADATA="$FACEBOOK_METADATA" --build-arg ARG_APP_SECRET="$APP_SECRET" --build-arg ARG_SERVER_URL="$SERVER_URL" --build-arg ARG_ACCESS_TOKEN="$ACCESS_TOKEN" --build-arg ARG_REDIS_PASSWORD="$REDIS_PASSWORD" --build-arg ARG_REDIS_HOST="$REDIS_HOST" --build-arg ARG_REDIS_PORT="$REDIS_PORT" --build-arg ARG_KAFKA_BROKERS="$KAFKA_BROKERS" --build-arg ARG_KAFKA_USERNAME="$KAFKA_USERNAME" --build-arg ARG_KAFKA_PASSWORD="$KAFKA_PASSWORD" --build-arg ARG_MONGO_URL="$MONGO_URL" --build-arg ARG_VERSION="$VERSION" --build-arg ARG_WEBHOOK_VERIFICATION_TOKEN="$WEBHOOK_VERIFICATION_TOKEN" --build-arg ARG_SFDC_CONSUMER_KEY="$SFDC_CONSUMER_KEY" --build-arg ARG_SFDC_CONSUMER_SECRET="$SFDC_CONSUMER_SECRET" --build-arg ARG_SFDC_USERNAME="$SFDC_USERNAME" --build-arg ARG_SFDC_PASSWORD="$SFDC_PASSWORD" --build-arg ARG_API_TOKEN_SECRET="$API_TOKEN_SECRET" --build-arg ARG_AUTH0_ISSUER="$AUTH0_ISSUER" --build-arg ARG_AUTH0_CLIENT_ID="$AUTH0_CLIENT_ID" --build-arg ARG_AUTH0_CLIENT_SECRET="$AUTH0_CLIENT_SECRET" 
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/supplyfy-chatbot:latest

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'supplyfy-chatbot'
          images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/supplyfy-chatbot:latest
          restart: true
